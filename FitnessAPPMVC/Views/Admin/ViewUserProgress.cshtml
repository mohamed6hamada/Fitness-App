@model IEnumerable<Fitness_App.Models.ViewModels.ProgressLogViewModel>

@{
    ViewData["Title"] = "User Progress Logs";
}

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-light">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="mb-1">Progress Logs for @ViewBag.UserName</h4>
                            <p class="text-muted mb-0">@ViewBag.UserEmail</p>
                        </div>
                        <div>
                            <a asp-action="ViewAllUsersProgress" class="btn btn-secondary me-2">
                                <i class="fas fa-arrow-left"></i> Back to All Users
                            </a>
                            <a asp-controller="Profile" asp-action="View" asp-route-id="@ViewBag.UserId" class="btn btn-info me-2">
                                <i class="fas fa-user"></i> View Profile
                            </a>
                            <a asp-action="DownloadUserProgressCsv" asp-route-userId="@ViewBag.UserId" class="btn btn-success">
                                <i class="fas fa-download"></i> Download CSV
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-4">Progress History</h5>
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Date</th>
                                    <th>Weight (kg)</th>
                                    <th>Goal Weight (kg)</th>
                                    <th>Chest (cm)</th>
                                    <th>Waist (cm)</th>
                                    <th>Arms (cm)</th>
                                    <th>Thighs (cm)</th>
                                    <th>Notes</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var log in Model)
                                {
                                    <tr>
                                        <td>@log.Date.ToShortDateString()</td>
                                        <td>@log.Weight</td>
                                        <td>@log.GoalWeight</td>
                                        <td>@log.Chest</td>
                                        <td>@log.Waist</td>
                                        <td>@log.Arms</td>
                                        <td>@log.Thighs</td>
                                        <td>@log.Notes</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Weight Progress</h5>
                    <canvas id="weightChart" width="400" height="250"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Body Measurements</h5>
                    <canvas id="measurementsChart" width="400" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Data for charts
            const dates = @Html.Raw(Model.First().ChartLabels ?? "[]");
            const weights = @Html.Raw(Model.First().ChartData ?? "[]");
            
            // Prepare measurements data
            const measurementsData = [];
            const chestData = [];
            const waistData = [];
            const armsData = [];
            const thighsData = [];
            
            @foreach (var log in Model.OrderBy(l => l.Date))
            {
                <text>
                measurementsData.push('@log.Date.ToString("MM/dd/yyyy")');
                chestData.push(@log.Chest);
                waistData.push(@log.Waist);
                armsData.push(@log.Arms);
                thighsData.push(@log.Thighs);
                </text>
            }
            
            // Weight chart
            const weightCtx = document.getElementById('weightChart').getContext('2d');
            new Chart(weightCtx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Weight (kg)',
                        data: weights,
                        borderColor: '#007bff',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Weight Progress Over Time'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: false
                        }
                    }
                }
            });
            
            // Measurements chart
            const measurementsCtx = document.getElementById('measurementsChart').getContext('2d');
            new Chart(measurementsCtx, {
                type: 'line',
                data: {
                    labels: measurementsData,
                    datasets: [
                        {
                            label: 'Chest (cm)',
                            data: chestData,
                            borderColor: '#28a745',
                            backgroundColor: 'rgba(40, 167, 69, 0.1)',
                            borderWidth: 2
                        },
                        {
                            label: 'Waist (cm)',
                            data: waistData,
                            borderColor: '#dc3545',
                            backgroundColor: 'rgba(220, 53, 69, 0.1)',
                            borderWidth: 2
                        },
                        {
                            label: 'Arms (cm)',
                            data: armsData,
                            borderColor: '#ffc107',
                            backgroundColor: 'rgba(255, 193, 7, 0.1)',
                            borderWidth: 2
                        },
                        {
                            label: 'Thighs (cm)',
                            data: thighsData,
                            borderColor: '#17a2b8',
                            backgroundColor: 'rgba(23, 162, 184, 0.1)',
                            borderWidth: 2
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Body Measurements Over Time'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: false
                        }
                    }
                }
            });
        });
    </script>
} 
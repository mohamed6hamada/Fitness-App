@* @model Fitness_App.BL.ViewModels.BlogViewModel
@{
    ViewData["Title"] = "Add Blog";
}

<h2>Add Blog</h2>

<form asp-action="AddBlog" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="BlogTitle"></label>
        <input asp-for="BlogTitle" class="form-control" />
        <span asp-validation-for="BlogTitle" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="BlogContent"></label>
        <textarea asp-for="BlogContent" class="form-control" rows="5"></textarea>
        <span asp-validation-for="BlogContent" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ImageFile"></label>
        <input asp-for="ImageFile" type="file" class="form-control-file" />
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</form>
 *@


@model Fitness_App.BL.ViewModels.BlogViewModel
@{
    ViewData["Title"] = "Add Blog";
}

@await Html.PartialAsync("_AdminStyles")

<div class="admin-container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="admin-card card">
                <div class="card-body p-4">
                    <div class="admin-header text-center">
                        <h2 class="fw-bold">Create New Blog Post</h2>
                        <p class="text-muted">Share your fitness knowledge and insights with the community</p>
                    </div>

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <ul class="mb-0">
                                @foreach (var modelState in ViewData.ModelState.Values)
                                {
                                    foreach (var error in modelState.Errors)
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                }
                            </ul>
                        </div>
                    }

                    <form asp-action="AddBlog" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()
                        
                        <div class="form-group mb-4">
                            <label asp-for="BlogTitle" class="form-label">Blog Title</label>
                            <input asp-for="BlogTitle" class="form-control form-control-lg" 
                                   placeholder="Enter an engaging title for your blog post" required />
                            <span asp-validation-for="BlogTitle" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group mb-4">
                            <label asp-for="BlogContent" class="form-label">Blog Content</label>
                            <textarea asp-for="BlogContent" class="form-control form-control-lg" rows="8" 
                                    placeholder="Write your blog content here..." required></textarea>
                            <span asp-validation-for="BlogContent" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group mb-4">
                            <label asp-for="ImageFile" class="form-label">Featured Image</label>
                            <input asp-for="ImageFile" type="file" class="form-control form-control-lg" 
                                   accept="image/*" required onchange="validateImage(this)" />
                            <small class="text-muted d-block mt-2">
                                Choose a high-quality image that represents your blog post (Supported formats: .jpg, .jpeg, .png, .gif | Max size: 5MB)
                            </small>
                            <span asp-validation-for="ImageFile" class="text-danger"></span>
                            <div id="imagePreview" class="mt-3" style="display: none;">
                                <img id="preview" src="#" alt="Preview" class="img-preview rounded" />
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                            <a asp-action="BlogManagement" class="btn btn-outline-secondary btn-lg px-4">
                                <i class="fas fa-arrow-left me-2"></i>Back to Blogs
                            </a>
                            <button type="submit" class="btn btn-primary btn-lg px-4">
                                <i class="fas fa-plus-circle me-2"></i>Publish Blog
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function validateImage(input) {
            const preview = document.getElementById('preview');
            const previewDiv = document.getElementById('imagePreview');
            
            if (!input.files || !input.files[0]) {
                previewDiv.style.display = 'none';
                return;
            }

            const file = input.files[0];
            const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
            
            if (!validTypes.includes(file.type)) {
                alert('Please select a valid image file (JPG, JPEG, PNG, or GIF)');
                input.value = '';
                previewDiv.style.display = 'none';
                return;
            }
            
            if (file.size > 5 * 1024 * 1024) {
                alert('File size must be less than 5MB');
                input.value = '';
                previewDiv.style.display = 'none';
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                preview.src = e.target.result;
                previewDiv.style.display = 'block';
            }
            reader.readAsDataURL(file);
        }

        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}